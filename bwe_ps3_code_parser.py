import os
import re
import sys
import io
import zlib
import base64
os.environ["PYGAME_HIDE_SUPPORT_PROMPT"] = "1"
import pygame
import threading
from contextlib import redirect_stdout

import ctypes

def set_window_title(title):
    # Encode the title to ANSI
    title_ansi = title.encode('ansi', 'ignore')
    ctypes.windll.kernel32.SetConsoleTitleA(title_ansi)

set_window_title('BwE PS3 Code Parser')

# -------------------------------------------------------------------
# Chiptunes!!!!!!!!!!!!!!!!!!!!
# -------------------------------------------------------------------
encoded_songs = [
    "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",
]

current_song_index = 0

def decode_mod_data(encoded_data):
    """Decode from base64 and then decompress the data."""
    compressed_data = base64.b64decode(encoded_data)
    mod_data = zlib.decompress(compressed_data)
    return mod_data

def play_mod_data(mod_data):
    """Initialize pygame mixer and play the MOD data in memory."""
    with open(os.devnull, 'w') as f, redirect_stdout(f):
        pygame.mixer.init()

    # Use BytesIO to play the data in memory
    mod_file = io.BytesIO(mod_data)
    pygame.mixer.music.load(mod_file)
    pygame.mixer.music.set_volume(0.2)
    pygame.mixer.music.play(-1)  # Loop the music indefinitely

    # Keep the script running until the music finishes or is stopped
    while pygame.mixer.music.get_busy():
        pygame.time.Clock().tick(10)

def play_next_song():
    """Stop current song and start playing the next one in the list."""
    global current_song_index
    pygame.mixer.music.stop()
    song_data = encoded_songs[current_song_index]
    mod_data = decode_mod_data(song_data.strip())
    music_thread = threading.Thread(target=play_mod_data, args=(mod_data,))
    music_thread.daemon = True
    music_thread.start()
    current_song_index = (current_song_index + 1) % len(encoded_songs)


# -------------------------------------------------------------------
# UI
# -------------------------------------------------------------------
def print_banner() -> str:
    """Generate a fancy multi‐color banner."""
    # Attempt to resize terminal (may not work on all terminals)
    sys.stdout.write("\x1b[8;{rows};{cols}t".format(rows=32, cols=130))

    banner = r"""
__________          ___________
\______   \___  _  _\_   _____/
 |    |  _/\  \/ \/ /|   __)_ 
 |    |   \ \      //        \
 |______  /  \_/\_//_______  /
Offline \/ PS3 Code Parser \/ v1.0.0
"""
    # Colors for each banner line, from dark purple to light blue
    colors = [
        (85, 0, 145),   # Dark purple
        (99, 43, 153),
        (122, 87, 176),
        (146, 130, 199),
        (169, 173, 222),
        (173, 216, 230),
        (173, 216, 230) # Light blue
    ]
    os.system("")  # Enable ANSI escape codes on some Windows terminals

    faded_banner = ""
    color_index = 0
    for line in banner.splitlines():
        r, g, b = colors[color_index]
        faded_banner += f"\033[38;2;{r};{g};{b}m{line}\033[0m\n"
        color_index = (color_index + 1) % len(colors)

    return faded_banner

def fade(text: str) -> str:
    """Applies a green fade effect to each character in 'text'."""
    os.system("")
    faded = ""
    green = 194
    for ch in text:
        faded += f"\033[38;2;0;{green};199m{ch}\033[0m"
        # Decrement green but clamp at 0
        green = max(green - 6, 0)
    return faded

def gradient_text(text: str, colors: list) -> str:
    """Applies a simple multi‐color cycling gradient across 'text'."""
    os.system("")
    gradient = ""
    color_index = 0
    for char in text:
        if char != " ":
            r, g, b = colors[color_index]
            gradient += f"\033[38;2;{r};{g};{b}m{char}\033[0m"
            color_index = (color_index + 1) % len(colors)
        else:
            gradient += char
    return gradient

def print_menu():
    """Prints the interactive menu with gradient colors."""
    colors = [
        (169, 173, 222),  # Intermediate colour
        (173, 216, 230),
        (173, 216, 230)
    ]
    menu_items = [
        "M. Turn Off Music",
        "N. Play Next Song",
        "Q. Quit",
        "\nEnter 8‐Character Error Code: "
    ]
    for item in menu_items[:-1]:
        print(gradient_text(item, colors))
    print(gradient_text(menu_items[-1], colors), end='')


# -------------------------------------------------------------------
# Parse! Or READ -- I don't know.... Parse is more formal? 
# -------------------------------------------------------------------
def parse_error_code(code: str):
    """
    Reserved Area, Step Number, Error Category, Error Information
    """
    code = code.upper().replace(" ", "")
    if len(code) != 8 or code[0] != 'A':
        return {
            "Reserved Area": "N/A",
            "Step Number": "N/A",
            "Error Category": "N/A",
            "Error Information": "Invalid code (Must be 8 chars, start with A)"
        }

    # Extract parts
    reserved_area = code[1]
    step_number = code[2:4]
    error_category_digit = code[4]
    error_information = code[4:]  # Last 4 chars

    # Reserved Area
    if reserved_area == 'F':
        reserved_desc = "Frequent Error Due To Main Body Breakdown"
    elif reserved_area in "0123456789ABCDEF":
        reserved_desc = "Reserved"
    else:
        return {
            "Reserved Area": "Unknown",
            "Step Number": "N/A",
            "Error Category": "N/A",
            "Error Information": "Invalid Reserved Area"
        }

    # Step Number
    if step_number in ["80", "90", "A0"]:
        static_states = {
            "80": "Power On",
            "90": "Power Off",
            "A0": "Immediately After Syscon Reset"
        }
        step_desc = f"Static state ({static_states[step_number]})"
    elif "00" <= step_number <= "7F":
        step_desc = f"Step Number {step_number} Of Power-On Sequence"
    else:
        return {
            "Reserved Area": reserved_desc,
            "Step Number": "Invalid",
            "Error Category": "N/A",
            "Error Information": "Invalid step number"
        }

    # Error Category
    categories = {
        "1": "System Error",
        "2": "Fatal Error",
        "3": "Fatal Booting Error",
        "4": "Data Error"
    }
    category_desc = categories.get(error_category_digit, "Unknown error category")

    # Lookup error in dictionary
    error_descriptions = {
        # --- 1000-series (System Errors) ---
        "1001": "CELL Power/Improper Shutdown (Filtering or NEC/TOKINs)",
        "1002": "RSX Power/Overheating (NEC/TOKINs on RSX_VDDC)",
        "1004": "AC/DC Power Loss (PSU or Forced Shutdown)",
        "1005": "CELL/RSX Power Rail Error (Caps on Some Super Slim Boards)",
        "1103": "System Thermal Alert (Older Mullion Syscon or CPU Sensor)",
        "1200": "CELL Overheating (Bad TIM or Airflow)",
        "1201": "RSX Overheating (Similar Cause as 1200)",
        "1203": "CELL VR Overheating (Sensor Issue)",
        "1204": "South Bridge Overheating (Thermal Sensor)",
        "1205": "EE/GS Overheating (PS2 Hardware Models Only)",
        "1301": "CELL PLL Unlock (CPU Damage or Bad Reball)",
        "14FF": "Check Stop (Hardware Stuck or Fault, BGA Failure)",
        "1601": "CELL Livelock Detection (Console Freeze or Hang)",
        "1701": "CELL BE Attention (CPU Fault During Operation)",
        "1802": "RSX Initialization Error",
        "1900": "RTC Voltage Error",
        "1901": "RTC Oscillator Error",
        "1902": "RTC Access Error",
        "1B01": "CELL Initialization Error (Thermal Sense Line)",
        "1B02": "RSX Initialization Error (Thermal Sense Line)",

        # --- 2000-series (Fatal Errors) ---
        "2001": "CELL Fatal Error (IC1001)",
        "2002": "RSX Fatal Error (IC2001)",
        "2003": "South Bridge Fatal Error (IC3001)",
        "2010": "Clock Generator Error (IC5001)",
        "2011": "Clock Generator Error (IC5003)",
        "2012": "Clock Generator Error (IC5002)",
        "2013": "Clock Generator Error (IC5004)",
        "2014": "Clock Error (Bad RSX NEC/TOKINs)",
        "2020": "HDMI Error (IC2502)",
        "2021": "HDMI or MultiAV Error",
        "2022": "DVE Error (IC2406)",
        "2024": "AV Error (GPU or Encoder Related)",
        "2030": "CELL Thermal Sensor Error (IC1101)",
        "2031": "RSX Thermal Sensor Error (IC2101)",
        "2033": "South Bridge Thermal Sensor Error (IC3101)",
        "2040": "Short on 12V Line (F6300, etc.)",
        "2044": "Super Slim Short Circuit (BT/Wi-Fi or 5V Line)",
        "2101": "CELL Fatal Error (IC1001)",
        "2102": "RSX Fatal Error (IC2001)",
        "2103": "South Bridge Fatal Error (IC3001)",
        "2110": "Clock Generator Error (IC5001) (Check 5V or F6001)",
        "2111": "Clock Generator Error (IC5003)",
        "2112": "Clock Generator Error (IC5002)",
        "2113": "Clock Generator Error (IC5004)",
        "2114": "Possible Clock or GPU Error (Tokin?)",
        "2120": "HDMI I/O Error (IC2502) (Check VRM Fuse or GPU BGA)",
        "2122": "DVE Error (IC2406, MultiAV)",
        "2124": "AV/HDMI Error (Delayed YLOD or GLOD)",
        "2130": "CELL Thermal Sensor Error (IC1101)",
        "2131": "RSX Thermal Sensor Error (IC2101)",
        "2133": "South Bridge Thermal Sensor Error (IC3101)",
        "2203": "South Bridge Fatal Error (IC3001)",
        "2310": "Fatal Error (Clock or Voltage or SB Initialization)",

        # --- 3000-series (Fatal Boot Errors) ---
        "3000": "Power Fail (Unspecified)",
        "3001": "12V Power Fail (Bad PSU or Short)",
        "3002": "Power Fail (Unspecified)",
        "3003": "CELL Core Power Fail (VDDC, NEC/TOKIN, VRM)",
        "3004": "RSX Core Power Fail (VDDC, NEC/TOKIN, VRM)",
        "3005": "RSX Short or Fuse Blow (F7601) on Some Slim Boards",
        "3010": "CELL Error (Power Good/Clock/Init) (Possible CPU Damage)",
        "3011": "CELL Error (SPI or Power)",
        "3012": "CELL Error",
        "3013": "CELL SPI Communication Fail (1.2V or Fuse F6302)",
        "3020": "CELL Error (Voltage or Step Check) (Possible PSU/Short)",
        "3030": "CELL Error (BGA or CPU Defect Suspected)",
        "3031": "CELL Reference Clock Error (BGA or Trace Damage)",
        "3032": "CELL Reference Clock Error (BGA or Open Line)",
        "3033": "CELL Error (RSX VID or CPU Voltage Config)",
        "3034": "Bit Training Fail (CELL/RSX/SB Communication, BGA)",
        "3035": "CELL-RSX Byte-Training Fail (GPU BGA or Bump Defect)",
        "3036": "CELL-RSX Fatal Error (GPU or CPU BGA)",
        "3037": "CELL-RSX Fatal Error (GPU or CPU BGA)",
        "3038": "CELL-SB Fatal Error (BGA or Bump)",
        "3039": "CELL-SB Fatal Error (BGA or Bump)",
        "3040": "Flash Controller Error (IC3801)",
        "3041": "SB or Flash Init Error (Step #52–60)",

        # --- 4000-series (Data Errors) ---
        "4001": "CELL Data Error (IC1001)",
        "4002": "RSX Data Error (IC2001)",
        "4003": "South Bridge Data Error (IC3001)",
        "4011": "CELL Data Error (IC1001)",
        "4101": "CELL Data Error (IC1001)",
        "4102": "RSX Data Error (IC2001)",
        "4103": "South Bridge Data Error (IC3001)",
        "4111": "CELL Data Error (IC1001)",
        "4201": "CELL Data Error (IC1001)",
        "4202": "RSX Data Error (IC2001)",
        "4203": "South Bridge Data Error (IC3001)",
        "4211": "CELL Data Error (IC1001)",
        "4212": "RSX Data Error (IC2001)",
        "4221": "CELL Data Error (IC1001)",
        "4222": "RSX Data Error (IC2001)",
        "4231": "CELL Data Error (IC1001)",
        "4261": "CELL Data Error (IC1001)",
        "4301": "CELL Data Error (IC1001)",
        "4302": "RSX Data Error (IC2001)",
        "4303": "South Bridge Data Error (IC3001)",
        "4311": "CELL Data Error (IC1001)",
        "4312": "RSX Data Error (IC2001)",
        "4321": "CELL Data Error (IC1001)",
        "4322": "RSX Data Error (IC2001)",
        "4332": "RSX Data Error (IC2001)",
        "4341": "CELL Data Error (IC1001)",
        "4401": "CELL or RSX Data Error (IC1001 or IC2001)",
        "4402": "CELL or RSX Data Error (IC1001 or IC2001)",
        "4403": "CELL or SB Data Error (IC1001 or IC3001)",
        "4411": "CELL or RSX Data Error (IC1001 or IC2001)",
        "4412": "CELL or RSX Data Error (IC1001 or IC2001)",
        "4421": "CELL or RSX Data Error (IC1001 or IC2001)",
        "4422": "CELL or RSX Data Error (IC1001 or IC2001)",
        "4432": "CELL or RSX Data Error (IC1001 or IC2001)",
        "4441": "CELL or SB Data Error (IC1001 or IC3001)",

        # --- Misc / Special ---
        "5FFF": "CELL or RSX Error (Bricked NOR on Slim/Super Slim)"
    }
    error_info_desc = error_descriptions.get(error_information, "Unknown error information")

    return {
        #"Reserved Area": reserved_desc, #Not really required, why bother!
        "Step Number": step_desc,
        "Error Category": category_desc,
        "Error Information": error_info_desc
    }


# -------------------------------------------------------------------
# OK HAVE FUN ENJOY!
# -------------------------------------------------------------------
def main():
    import pygame
    pygame.mixer.init()

    # Now the mixer is ready:
    play_next_song()

    while True:
        # 2) Clear screen (Windows or Linux/macOS)
        os.system("cls" if os.name == "nt" else "clear")
        print(print_banner())
        print_menu()

        # 3) Get user input
        user_input = input().strip().upper()

        if user_input == 'M':
            pygame.mixer.music.stop()
            continue

        elif user_input == 'N':
            play_next_song()
            continue

        elif user_input == 'Q':
            print("Exiting Program.")
            pygame.mixer.quit()
            sys.exit(0)

        else:
            # 4) Validate user input is an 8-hex code like A0801004
            pattern = r"^[A-F0-9]{8}$"
            if re.fullmatch(pattern, user_input):
                parsed_result = parse_error_code(user_input)

                # Color gradient for output lines
                colors = [
                    (179, 183, 242),
                    (183, 226, 240),
                    (183, 226, 240)
                ]

                # Print each "key: value" with color
                print()
                for key, value in parsed_result.items():
                    colored_key = gradient_text(f"{key}:", colors)
                    #colored_value = gradient_text(f"{value}", colors) #Looks better without this...
                    print(f"{colored_key} {value}")
            else:
                # Invalid code format
                colors = [
                    (250, 150, 155),  # Medium red
                    (240, 100, 100)   # Darker red
                ]
                print(gradient_text("\nInvalid Input! Please Enter M, N, Q, or an 8-digit Hex Code (e.g., A0801001).", colors))

            input("\nPress Enter to Continue...")  # Pause

# Run the program bruh
if __name__ == "__main__":
    main()
